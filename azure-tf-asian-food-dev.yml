# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

pool:
  name: Default
  demands:
  - agent.name -equals master-node

variables:
  bkRg: 'tfstateRG01'
  bkstorage: 'tfstate0126626'
  bkcontainer: 'tfstate'
  bkstoragekey: 'devpipeline.terraform.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTask@5
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AsianFoodServiceConnection'
              backendAzureRmResourceGroupName: '$(bkRg)'
              backendAzureRmStorageAccountName: '$(bkRg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstoragekey)'
          - task: TerraformTask@5
            displayName: Validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTask@5
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AsianFoodServiceConnection'
              backendAzureRmResourceGroupName: '$(bkRg)'
              backendAzureRmStorageAccountName: '$(bkRg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstoragekey)'
          - task: TerraformTask@5
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'AsianFoodServiceConnection'
          - task: TerraformTask@5
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'AsianFoodServiceConnection'